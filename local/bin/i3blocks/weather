#!/usr/bin/python3
# -*- coding: utf-8 -*-

import requests

WEATHER_ICONS = {
    "unknown": u" ", #u"✨",
    "sunny": '<span foreground="yellow">' + u"☀️" + '</span>',
    "clear": '<span foreground="yellow">' + u"☀️" + '</span>',
    "overcast": u"☁️",
    "partlycloudy": '<span foreground="yellow">' + u"⛅️" + '</span>',
    "cloudy": u"☁️",
    "verycloudy": '<span foreground="gray">' + u"☁️" + '</span>',
    "mist": u"🌁",
    "fog": u"🌁",
    "haze": u"🌁",
    "rain": '<span foreground="#77BBFF">' + u"🌦" + '</span>',
    "lightrain": '<span foreground="#77BBFF">' + u"🌦" + '</span>',
    "heavyrain": '<span foreground="#3399FF">' + u"🌧" + '</span>',
    "thunderyheavyrain": '<span foreground="#3399FF">' + u"🌩" + '</span>',
    "lightshowers": '<span foreground="77BBFF">' + u"🌦" + '</span>',
    "heavyshowers": '<span foreground="#3399FF">' + u"🌧" + '</span>',
    "snow": '<span foreground="white">' + u"🌨" + '</span>',
    "lightsnow": u"🌨",
    "heavysnow": '<span foreground="white">' + u"❄️" + '</span>',
    "lightsnowshowers": '<span foreground="#77BBFF">' + u"🌨" + '</span>',
    "heavysnowshowers": '<span foreground="#77BBFF">' + u"❄️" + '</span>',
    "lightsleet": u"🌧",
    "lightsleetshowers": u"🌧",
    "thunderyshowers": '<span foreground="#3399FF">' + u"⛈" + '</span>',
    "thunderysnowshowers": '<span foreground="#3399FF">' + u"⛈" + '</span>',
}

WEATHER_URL="https://wttr.in/?format=j1"

def temp_to_colour(temp):
    if temp < -20:
        return '#4444FF'
    elif temp < -5:
        return '#5484F4'
    elif temp > 32:
        return '#CC1111'
    elif temp > 26:
        return '#CC6666'
    else:
        return '#AAAAAA'

def wind_to_colour(wind_speed):
    if wind_speed > 45:
        return 'red'
    elif wind_speed > 25:
        return '#CC6666'
    elif wind_speed > 8:
        return '#AAAAAA'
    else:
        return '#555555'

def precip_to_colour(precipitation_amount):
    if precipitation_amount > 20.0:
        return 'red'
    elif precipitation_amount > 7.6:
        return '#5484F4'
    elif precipitation_amount > 2.5:
        return '#7492C4'
    elif precipitation_amount > 0:
        return '#557799'
    else:
        return '#555555'

def main():
    response = requests.get(WEATHER_URL)
    response = response.json()

    location = response['nearest_area'][0]['areaName'][0]['value']

    description = response['current_condition'][0]['weatherDesc'][0]['value'].lower().replace(' ', '')
    icon = WEATHER_ICONS.get(description) or WEATHER_ICONS['unknown']

    temperature = int(response['current_condition'][0]['temp_C'])

    feels_like = int(response['current_condition'][0]['FeelsLikeC'])

    wind_speed = int(response['current_condition'][0]['windspeedKmph'])
    wind_direction = response['current_condition'][0]['winddir16Point']

    precipitation = float(response['current_condition'][0]['precipMM'])

    print(
        '{location}'
        '<span foreground="#555555" letter_spacing="5000">|</span>'
        '{icon} '
        '<span foreground="{temp_colour}">{temperature} °C</span> '
        '(<span foreground="{feels_like_colour}">{feels_like} °C</span>)'
        '<span foreground="#555555" letter_spacing="5000">|</span>'
        '<span foreground="{wind_colour}">{wind_speed} km/h {wind_direction}</span>'
        '<span foreground="#555555" letter_spacing="5000">|</span>'
        '<span foreground="{precip_colour}">💧 {precipitation}</span>'\
        .format(
            location=location,
            icon=icon,
            temperature=temperature,
            temp_colour=temp_to_colour(temperature),
            feels_like=feels_like,
            feels_like_colour=temp_to_colour(feels_like),
            wind_speed=wind_speed,
            wind_direction=wind_direction,
            wind_colour=wind_to_colour(wind_speed),
            precipitation=precipitation,
            precip_colour=precip_to_colour(precipitation),
        )
    )

if __name__ == '__main__':
    main()
